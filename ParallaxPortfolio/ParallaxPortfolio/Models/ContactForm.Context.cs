//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParallaxPortfolio.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class sp5BrandonEntities : DbContext
    {
        public sp5BrandonEntities()
            : base("name=sp5BrandonEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BlogComment> BlogComments { get; set; }
        public virtual DbSet<BlogPost> BlogPosts { get; set; }
        public virtual DbSet<ContactForm> ContactForms { get; set; }
    
        public virtual int DeleteBloodBankByID(Nullable<int> bloodBankID)
        {
            var bloodBankIDParameter = bloodBankID.HasValue ?
                new ObjectParameter("BloodBankID", bloodBankID) :
                new ObjectParameter("BloodBankID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBloodBankByID", bloodBankIDParameter);
        }
    
        public virtual int DeleteDonorByID(Nullable<int> donorID)
        {
            var donorIDParameter = donorID.HasValue ?
                new ObjectParameter("DonorID", donorID) :
                new ObjectParameter("DonorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDonorByID", donorIDParameter);
        }
    
        public virtual int DeletePatientByID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePatientByID", patientIDParameter);
        }
    
        public virtual int GetBloodBankID(Nullable<int> bloodBankID)
        {
            var bloodBankIDParameter = bloodBankID.HasValue ?
                new ObjectParameter("BloodBankID", bloodBankID) :
                new ObjectParameter("BloodBankID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBloodBankID", bloodBankIDParameter);
        }
    
        public virtual ObjectResult<GetDonorID_Result> GetDonorID(Nullable<int> donorID)
        {
            var donorIDParameter = donorID.HasValue ?
                new ObjectParameter("DonorID", donorID) :
                new ObjectParameter("DonorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDonorID_Result>("GetDonorID", donorIDParameter);
        }
    
        public virtual ObjectResult<GetDonorsByPatientID_Result> GetDonorsByPatientID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDonorsByPatientID_Result>("GetDonorsByPatientID", patientIDParameter);
        }
    
        public virtual ObjectResult<GetHighScoreID_Result> GetHighScoreID(Nullable<int> highScoreID)
        {
            var highScoreIDParameter = highScoreID.HasValue ?
                new ObjectParameter("HighScoreID", highScoreID) :
                new ObjectParameter("HighScoreID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHighScoreID_Result>("GetHighScoreID", highScoreIDParameter);
        }
    
        public virtual ObjectResult<GetPatientID_Result> GetPatientID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientID_Result>("GetPatientID", patientIDParameter);
        }
    
        public virtual int InsertBloodBank(string bloodBankName, string bloodBankAddress, string bloodBankContactNumber)
        {
            var bloodBankNameParameter = bloodBankName != null ?
                new ObjectParameter("BloodBankName", bloodBankName) :
                new ObjectParameter("BloodBankName", typeof(string));
    
            var bloodBankAddressParameter = bloodBankAddress != null ?
                new ObjectParameter("BloodBankAddress", bloodBankAddress) :
                new ObjectParameter("BloodBankAddress", typeof(string));
    
            var bloodBankContactNumberParameter = bloodBankContactNumber != null ?
                new ObjectParameter("BloodBankContactNumber", bloodBankContactNumber) :
                new ObjectParameter("BloodBankContactNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBloodBank", bloodBankNameParameter, bloodBankAddressParameter, bloodBankContactNumberParameter);
        }
    
        public virtual int InsertDonor(string donorName, string donorBloodtype)
        {
            var donorNameParameter = donorName != null ?
                new ObjectParameter("DonorName", donorName) :
                new ObjectParameter("DonorName", typeof(string));
    
            var donorBloodtypeParameter = donorBloodtype != null ?
                new ObjectParameter("DonorBloodtype", donorBloodtype) :
                new ObjectParameter("DonorBloodtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDonor", donorNameParameter, donorBloodtypeParameter);
        }
    
        public virtual int insertHighScore(string name, string game, Nullable<int> score)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var gameParameter = game != null ?
                new ObjectParameter("game", game) :
                new ObjectParameter("game", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertHighScore", nameParameter, gameParameter, scoreParameter);
        }
    
        public virtual int InsertPatient(string patientName, string patientBloodtype)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var patientBloodtypeParameter = patientBloodtype != null ?
                new ObjectParameter("PatientBloodtype", patientBloodtype) :
                new ObjectParameter("PatientBloodtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPatient", patientNameParameter, patientBloodtypeParameter);
        }
    
        public virtual int UpdateBloodBanks(string bloodBankName, string bloodBankAddress, string bloodBankContactNumber)
        {
            var bloodBankNameParameter = bloodBankName != null ?
                new ObjectParameter("BloodBankName", bloodBankName) :
                new ObjectParameter("BloodBankName", typeof(string));
    
            var bloodBankAddressParameter = bloodBankAddress != null ?
                new ObjectParameter("BloodBankAddress", bloodBankAddress) :
                new ObjectParameter("BloodBankAddress", typeof(string));
    
            var bloodBankContactNumberParameter = bloodBankContactNumber != null ?
                new ObjectParameter("BloodBankContactNumber", bloodBankContactNumber) :
                new ObjectParameter("BloodBankContactNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBloodBanks", bloodBankNameParameter, bloodBankAddressParameter, bloodBankContactNumberParameter);
        }
    
        public virtual int UpdateDonor(string donorName, string donorBloodtype)
        {
            var donorNameParameter = donorName != null ?
                new ObjectParameter("DonorName", donorName) :
                new ObjectParameter("DonorName", typeof(string));
    
            var donorBloodtypeParameter = donorBloodtype != null ?
                new ObjectParameter("DonorBloodtype", donorBloodtype) :
                new ObjectParameter("DonorBloodtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDonor", donorNameParameter, donorBloodtypeParameter);
        }
    
        public virtual int UpdatePatient(string patientName, string patientBloodtype)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var patientBloodtypeParameter = patientBloodtype != null ?
                new ObjectParameter("PatientBloodtype", patientBloodtype) :
                new ObjectParameter("PatientBloodtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePatient", patientNameParameter, patientBloodtypeParameter);
        }
    }
}
